Version 2.0.0-RC22
- Bug fix for progress reporting on Parallel downloads

Version 2.0.0-RC21
- Bug fix for status reporting on Parallel downloads

Version 2.0.0-RC20
- Added New FileDownloader types. Parallel and Sequential Downloaders.
  a)Parallel downloader slices a download in multiple parts allowing for faster download.
    This downloader processes the download over several background threads. Use the parallel downloader when system resources are not constrained.
  b)Sequential downloader is the default downloader, and processes a download request Sequentially.
    The download is processed on a single background thread. The Downloader is Generally Fast.
  See the Downloader.kt java docs for more information.

- Bug fixes

Version 2.0.0-RC19
- Added new RequestOptions for Fetch. Fixed RequestOptions from RC18. See the Java documents and sample app for more information.
- Bug fixes
- Updated the sample app to reflect RequestOption changes

Version 2.0.0-RC18
- Added new RequestOptions for Fetch. See the Java documents and sample app for more information.
- Bug fixes
- Updated the sample app

Version 2.0.0-RC17
- Added new method getRequestOutputStream(request: Request, filePointerOffset: Long): OutputStream? on Downloader interface.
  You can now provide Fetch a custom downloader that provides an OutputStream per Download. See Downloader.kt documentation for more information.
  Also see sample app for more information on custom downloader.

Breaking Changes
- Added new method getRequestOutputStream(request: Request, filePointerOffset: Long): OutputStream? on Downloader interface.
- Added new fields id, file, and tag on Downloader.Request class.
- Added new field request on Downloader.Response class.

Version 2.0.0-RC16
- Fix for retry on network gain. Thanks to dougkeen
- Library updates

Version 2.0.0-RC15
- updated Fetch Migrator

Version 2.0.0-RC14
- Bug fixes to database sanitize methods

Version 2.0.0-RC13
- Bug fixes.
- Added new Error.FILE_NOT_FOUND constant if the downloaded file on the local devices was deleted
  and the matching request is still managed by Fetch.
- Fetch now sanitizes(Checks if the local file exist) downloads from the database on each get call.

Version 2.0.0-RC12
- Improved error reporting and handling when a download encounters an error.
- Error returned with a download that encountered an error now has a throwable attached when the error occurs.

Version 2.0.0-RC11
- Fixed Fetch close bugs
- Fixed onResume bugs
- Bug fixes

Version 2.0.0-RC10
- Memory usage improvements
- Performance improvements
- Bug fixes

Version 2.0.0-RC9
- Lowered min sdk to 14
- Updated android support library, Kotlin, rxJava and okHttp library
- Added copy method on Download Interface
- Bug fixes on DownloadInfo class
- Fixed FetchImplementationException crash after calling close method on Fetch.
- Added missing callbacks on rxFetch enqueue methods
- Better error handling for non-existing urls - Special thanks to Joshua Park (jclova) for the fix.
- Added enabledAutoStart method on Fetch Builder
- Added retry download on network lost feature.
- Added enableRetryOnNetworkGain method on FetchBuilder
- Added Tag field to Request and Download classes. Tags are saved to the FetchDatabase. See documentation.
- Overall improvement and bug fixes

Version 2.0.0-RC8
- Can now use your own unique id for a request.
- Added new methods removeAllWithStatus(status: Status) and fun deleteAllWithStatus(status: Status)
- RxJava library update

Version 2.0.0-RC7
- Kotlin update.
- Fixed download priority issue.

Version 2.0.0-RC6
- Dependency fixes.
- kotlin update.
- Fixed okResponse method in httpUrlConnectionDownloader class.

Version 2.0.0-RC5
- Behavior Change: Added download speed reporting in Fetch Listener onProgress method.
- Fixed ETA reporting. Reports are more accurate using weighted moving average.

Version 2.0.0-RC4
- Fixed slow downloading speeds on some devices.

Version 2.0.0-RC3
- Fix compile and build issue for non Kotlin projects.
- Minor changes for rxFetch.

Version 2.0.0-RC2
- Added new inner class HttpUrlConnectionPreferences to HttpUrlConnectionDownloader. See java docs.
- travis config update.
- remove circleci config file.
- updated unit tests.
- Change source and target comparability from version 1_8 to 1_7 for better project comparability.

Version 2.0.0-RC1
*Fetch has been completely rebuilt in version 2 and is not compatible with Fetch version 1.

What's new?

- Fetch is now faster, more accurate, customizable and developer friendly.
- Fetch instances are thread safe.
- Fetch uses less system resources.
- More status reporting methods have been added to the FetchListener.
- Better download status reporting.
- Better error reporting.
- Grouped download support added.
- Download time remaining is now reported in the FetchListener onProgress method.
- Support for HttpUrlConnection and OkHttp client downloader. You can also provide Fetch
  your own custom Downloader. See the Java Docs for the Downloader class and check out the README.
- Better logging. You can also provide Fetch with your own custom logger. See the update samples.
- Network specific downloading support.
- Set priority on downloads.
- Built entirely in Kotlin.
- Updated Samples.

Version 1.1.5
- bug fixes

Version 1.1.4
- bug fixes
- Android Oreo compatibility

Version 1.1.3
- Enqueuing is now faster
- New RemoveRequest(id) and RemoveRequestsAll() methods that removes a request from the database but does not delete the file
- Error log fixes
- Database Bug fixes.
- Fixed cursors not closing properly
- New setOnUpdateInterval(ms) to control the progress update interval.

Version 1.1.2
- Added new get(long...ids) method to Fetch.
- Max Limit on concurrent downloads removed.
- Fetch Service now stops when all work is done.
- Bug fixes.

Version 1.1.1
- Fixed SQLite error when strings where not escaped when inserting into the database.
- Added new updateUrlForRequest method to Fetch.
- Bug fixes.

Version 1.1.0
- Concurrent Downloads Support.
- Logging improvements.
- New Settings class to change Fetch's behavior.
- Bug fixes and performance improvements.

Version 1.0.3
- Improved progress reporting.
- Bug fixes and performance improvements.
- updated API methods.

Version 1.0.2
- Bug fixes around progress reporting.
- Bug fixes and performance improvements.

Version 1.0.1

- Bug fixes and performance improvements.
- Fetch Listener now also reports downloaded bytes and file size.
- New Fetch Call feature.
- Update Fetch documentation.

Verson 1.0

- Simple and easy to use API.
- Continuous downloading in the background.
- Ability to pause and resume downloads.
- Set the priority of a download request.
- Ability to retry failed downloads.
- Easy progress and status tracking.
- And more...
